/*
 * File: odometer_usecases.ums
 * Autore: Emanuele Aina <em@nerd.ocracy.org>
 * Licenza: LGPL
 */

actor rs232 = "RS232";
usecase readAngle = "Lettura angolo";
usecase readRevolutions = "Lettura rivoluzioni";
usecase setCoeff = "Imposta coefficiente";
usecase setK = "Imposta K";
usecase setK1 = "Imposta K1";
usecase setK2 = "Imposta K2";

usecase readCommand = "Lettura comando";
usecase readData = "Lettura dati";
usecase readRS232 = "Lettura RS232";
usecase writeRS232 = "Scrittura RS232";

actor encoder = Encoder;
usecase rotate = "Ruota di N gradi";
usecase fullRevolution = "Compie giro completo";
usecase decodeRotation = "Decodifica rotazione";

usecasediagram odometer_usecases {
    comment = "Casi d'uso";
    layout = grid(4, 
        *,       readAngle,       *, *,
        *,       readRevolutions, *, writeRS232,
        rs232,   setCoeff,        *, readCommand,
        *,       setK,            *, readRS232,
        *,       setK1,           *, readData,
        *,       setK2,           *, *,

        encoder, rotate,          *, *,
        *,       fullRevolution,  *, decodeRotation
        );
    entities {
        rs232 uses readAngle;
        rs232 uses readRevolutions;
        rs232 uses setCoeff;
        rs232 uses setK;
        rs232 uses setK1;
        rs232 uses setK2;

        readAngle includes readCommand;
        readAngle includes writeRS232;
        readRevolutions includes readCommand;
        readRevolutions includes writeRS232;
        setCoeff includes readCommand;
        setCoeff includes readData;
        setK includes readCommand;
        setK includes readData;
        setK1 includes readCommand;
        setK1 includes readData;
        setK2 includes readCommand;
        setK2 includes readData;

        readCommand includes readRS232;
        readData includes readRS232;

        encoder uses rotate;
        encoder uses fullRevolution;
        rotate includes decodeRotation;
        fullRevolution includes decodeRotation;
    }
}
